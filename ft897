#!/bin/bash

scriptinit() {
  serialport="/dev/serial0"
  readdelay=2.5
  commanddelay=0.25

  realpath="$(realpath ${0})"
  conffile="${realpath}.conf"
  workingdir="${realpath%/*}"

  declare -g -A modes=(
    "00" "LSB"
    "01" "USB"
    "02" "CW"
    "03" "CWR"
    "04" "AM"
    "06" "WFM"
    "08" "FM"
    "88" "FMN"
    "0a" "DIG"
    "0c" "PKT"
  )

  if [ -f ${conffile} ]; then
    . ${conffile}
  fi
}

listcommands() {
  echo commands
  for file in ${workingdir}/commands/*; do
    echo "$(xxd -p $file) ${file##*/}"
  done
}

listscripts() {
  echo scripts
  for file in ${workingdir}/scripts/*; do
    echo "${file##*/}\t\t$(cat $file)"
  done
}

fixserialportsetting() {
  stty -F ${serialport} 38400 1:0:800008bf:0:0:0:0:0:0:5:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0
}

sendcommand() {
  echo "${1}" | xxd -r -p >${serialport}
}

readresponse() {
  (
    timeout ${readdelay}s xxd -p -l ${1} <${serialport} &
    cat ${2} >${serialport}
  )
}

getfreq() {
  readresponse 5 ${workingdir}/commands/get-freq
}

getrxstatus() {
  readresponse 1 ${workingdir}/commands/read-rx-status
}

gettxstatus() {
  readresponse 1 ${workingdir}/commands/read-tx-status
}

displayfreq() {
  if [ -n "${1}" ]; then
    echo "${1:0:3}.${1:3:5} ${modes[${1:8:2}]}"
  fi
}

displayrxstatus() { #-a "${1}" != "ff"
  if [ -n "${1}" ]; then
    val=$((0x${1}))
    if [ ${val} -ne 255 ]; then
      echo -n "S$((0x${1} & 0xf))"
      if [ $((${val} & 0x20)) != 0 ]; then
        echo -n " Off-Center"
      fi
      if [ $((${val} & 0x40)) == 0 ]; then
        echo -n " Match"
      fi
      if [ $((${val} & 0x80)) != 0 ]; then
        echo -n " Squech"
      fi
    fi
  fi
}

displaytxstatus() {
  if [ -n "${1}" ]; then
    val=$((0x${1}))
    if [ ${val} -ne 255 ]; then
      echo -n "P$((0x${1} & 0xf))"
      if [ $((${val} & 0x20)) == 0 ]; then
        echo -n " Split"
      fi
      if [ $((${val} & 0x40)) != 0 ]; then
        echo -n " HI SWR"
      fi
      if [ $((${val} & 0x80)) == 0 ]; then
        echo -n " PTT"
      fi
    fi
  fi
}

displaystatus() {
  echo "$(displayfreq $(getfreq)) $(displayrxstatus $(getrxstatus)) $(displaytxstatus $(gettxstatus))"
}

setfreq() {
  if [ -n "${1}" ]; then
    local freq keyed="${1}"

    case "${#keyed}" in

    4) keyed="${keyed}0" ;&
    3 | 5)
      if [ -z "${megs}" ]; then
        local curfreq=$(getfreq)
        megs="${curfreq:0:3}"
      fi
      freq="${megs}${keyed}"
      ;;

    7) keyed="${keyed}0" ;&
    6 | 8)
      megs="${keyed:0:3}"
      freq="${keyed}"
      ;;

    esac

    if [ -n "${freq}" ]; then
      if [ ${#freq} -eq 6 ]; then
        freq="${freq}00"
      fi
      sendcommand "${freq}01"
    fi
  fi
}

setclar() {
  if [ "${1}" = "+" ]; then
    command="0000"
  fi
  if [ "${1}" = "-" ]; then
    command="0100"
  fi
  freq="0000"
  if [[ ${2} -gt 0 ]]; then
    freq="$(printf "%04i" ${2})"
  fi
  command="${command}${freq}f5"
  sendcommand "${command}"
}

readline() {
  displaystatus
  while read keyed; do
    if [ -n "${keyed}" ]; then
      case "${keyed}" in
      "*") displaystatus ;;
      *)
        setfreq "${keyed}"
        sleep ${commanddelay}
        displaystatus
        ;;
      esac
    fi
  done
}

debug() {
  echo "debug"
}

docat() {
  while [ -n "${1}" ]; do
    case "${1}" in
    l)
      listcommands
      listscripts
      exit
      ;;
    c)
      listcommands
      exit
      ;;
    s)
      listscripts
      exit
      ;;
    fix) fixserialportsetting ;;
    get-freq) displayfreq $(getfreq) ;;
    get-status) displaystatus ;;
    read-rx-status) displayrxstatus $(getrxstatus) ;;
    read-tx-status) displayrxstatus $(gettxstatus) ;;
    set-freq)
      if [ -n "${2}" -a ${2} -gt 0 ]; then
        setfreq "${2}"
        shift
      fi
      ;;
    set-clar) setclar "${2}" "${3}" ;;
    r | readline) readline ;;
    debug) debug ;;
    *)
      command="${workingdir}/commands/${1}"
      if [ -f ${command} ]; then
        cat ${command} >${serialport}
      else
        script="${workingdir}/scripts/${1}"
        if [ -f ${script} ]; then
          docat $(cat ${script})
        fi
      fi
      ;;
    esac
    shift
    if [ -n "${1}" ]; then
      sleep ${commanddelay}
    fi
  done
}

scriptinit
if [ -z "$*" ]; then
  displaystatus
else
  docat $@
fi
