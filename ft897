#!/bin/bash

scriptinit() {
  serialport="/dev/serial0"
  readdelay=2.5
  commanddelay=0.25

  realpath="$(realpath ${0})"
  conffile="${realpath}.conf"
  workingdir="${realpath%/*}"

  declare -g -A modes=(
    "00" "LSB"
    "01" "USB"
    "02" "CW"
    "03" "CWR"
    "04" "AM"
    "06" "WFM"
    "08" "FM"
    "88" "FMN"
    "0a" "DIG"
    "0c" "PKT"
  )

  if [ -f ${conffile} ]; then
    . ${conffile}
  fi
}

listcommands() {
  echo commands
  for file in ${workingdir}/commands/*; do
    echo "$(xxd -p $file) ${file##*/}"
  done
}

listscripts() {
  echo scripts
  for file in ${workingdir}/scripts/*; do
    echo "${file##*/}\t\t$(cat $file)"
  done
}

fixserialportsetting() {
  stty -F ${serialport} 38400 1:0:800008bf:0:0:0:0:0:0:5:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0
}

readresponse() {
  (
    timeout ${readdelay}s xxd -p -l ${1} <${serialport} &
    cat ${2} >${serialport}
  )
}

getfreq() {
  readresponse 5 ${workingdir}/commands/get-freq
}

getrxstatus() {
  readresponse 1 ${workingdir}/commands/read-rx-status
}

gettxstatus() {
  readresponse 1 ${workingdir}/commands/read-tx-status
}

displayfreq() {
  if [ -n "${1}" ]; then
    echo "${1:0:3}.${1:3:5} ${1:8:2} ${modes[${1:8:2}]}"
  fi
}

displayrxstatus() { #-a "${1}" != "ff"
  echo "rxstatus=${1}=$((0x${1}))"
  if [ -n "${1}" ]; then
    val=$((0x${1}))
    if [ ${val} -ne 255 ]; then
      echo "smeter=$((0x${1} & 0xf))"
    fi
  fi
}

displaytxstatus() {
  echo "txstatus=${1}=$((0x${1}))"
  if [ -n "${1}" ]; then
    val=$((0x${1}))
    if [ ${val} -ne 255 ]; then
      echo "pmeter=$((0x${1} & 0xf))"
    fi
  fi
}

displaystatus() {
  displayfreq $(getfreq)
  displayrxstatus $(getrxstatus)
  displaytxstatus $(gettxstatus)
}

setfreq() {
  if [ -n "${1}" ]; then
    local freq keyed="${1}"

    case "${#keyed}" in

    4) keyed="${keyed}0" ;&
    3 | 5)
      if [ -z "${megs}" ]; then
        local curfreq=$(getfreq)
        megs="${curfreq:0:3}"
      fi
      freq="${megs}${keyed}"
      ;;

    7) keyed="${keyed}0" ;&
    6 | 8)
      megs="${keyed:0:3}"
      freq="${keyed}"
      ;;

    esac

    if [ -n "${freq}" ]; then
      if [ ${#freq} -eq 6 ]; then
        freq="${freq}00"
      fi
      echo "freq=${freq}"
      echo "${freq}01" | xxd -r -p >${serialport}
    fi
  fi
}

# setclar() {
# }

readline() {
  (
    if [ -n "${1}" ]; then
      megs="${1}"
    fi
    if [ -z "${1}" ]; then
      megs=$(getfreq | cut -c-3)
    fi
    if [ -z "${megs}" ]; then
      exit
    fi
    while read keyed; do
      case "${#keyed}" in

      4) keyed="${keyed}0" ;&
      3 | 5) freq="${megs}${keyed}" ;;

      7) keyed="${keyed}0" ;&
      6 | 8)
        megs="${keyed:0:3}"
        freq="${keyed}"
        ;;

      *) continue ;;
      esac
      setfreq ${freq}
    done
  )
}

debug() {
  echo "debug"
}

docat() {
  while [ -n "${1}" ]; do
    case "${1}" in
    l | ls | list)
      listcommands
      listscripts
      exit
      ;;
    c)
      listcommands
      exit
      ;;
    s)
      listscripts
      exit
      ;;
    fix) fixserialportsetting ;;
    get-freq) displayfreq $(getfreq) ;;
    get-status) displaystatus ;;
    read-rx-status) displayrxstatus $(getrxstatus) ;;
    read-tx-status) displayrxstatus $(gettxstatus) ;;
    set-freq)
      if [ -n "${2}" -a ${2} -gt 0 ]; then
        setfreq "${2}"
        shift
      fi
      ;;
    set-clar)
      if [ "${2}" = "+" ]; then
        command="0000"
      fi
      if [ "${2}" = "-" ]; then
        command="0100"
      fi
      freq="0000"
      if [ ${3} -gt 0 ]; then
        freq="$(printf "%04i" ${3})"
      fi
      command="${command}${freq}f5"
      echo Sendig $(echo ${command} | xxd -r -p | xxd -p)
      echo ${command} | xxd -r -p >${serialport}
      ;;
    r | readline)
      readline ${2}
      if [ -n "${2}" ]; then
        shift
      fi
      ;;
    debug) debug ;;
    *)
      command="${workingdir}/commands/${1}"
      if [ -f ${command} ]; then
        echo Sending $(xxd -p ${command})
        cat ${command} >${serialport}
      else
        script="${workingdir}/scripts/${1}"
        if [ -f ${script} ]; then
          docat $(cat ${script})
        fi
      fi
      ;;
    esac
    shift
    if [ -n "${1}" ]; then
      sleep ${commanddelay}
    fi
  done
}

scriptinit
if [ -z "$*" ]; then
  displaystatus
else
  docat $@
fi
